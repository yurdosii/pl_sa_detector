[tool.poetry]
name = "api-service"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "api_service", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.94.1"
uvicorn = {extras = ["standard"], version = "^0.21.0"}

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.1.1"
flake8-pyproject = "^1.2.2"
black = "^23.1.0"
pre-commit = "^3.1.1"

[tool.black]
line-length = 79
target-version = ['py310', 'py311']
exclude = '''
  /(
    \.git
    | __pycache__
  )/
'''

[tool.flake8]
max-line-length = 79
exclude = [".git", "__pycache__"]

[tool.isort]
profile = "black"
src_paths = ["./src"]
force_alphabetical_sort_within_sections = true
virtual_env = "./.venv/"

[tool.mypy]
python_version = "3.11"
strict = true
mypy_path = "./src/"
allow_untyped_globals = true
check_untyped_defs = true
disallow_any_decorated = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = false
show_error_codes = true
warn_return_any = true
warn_unused_configs = true
plugins = [
  "pydantic.mypy"
]

[[tool.mypy.overrides]]
module = "src.api.*"
disallow_any_decorated = false
disallow_untyped_decorators = false


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
